@page "/editproduct"



<div class="content">

  
<PageTitle>Create Product</PageTitle>

@*Form for users to create a new product*@
<div class="mt-4">
<h3>Create Product</h3>
</div>




@if (publishes is null)
{
  <p><em>Loading..</em></p>
}else
{
  <div class="row">

    <div class="col-md-12">

      <EditForm Model="@product" FormName="editProduct" OnSubmit="HandleSubmit">
        <div class="mb-3">
          <label for="name" class="form-label">Name: </label>
          <InputText id="name" @bind-Value="product.Name" class="form-control" />
        </div>
        <div class="mb-3">
          <label for="published" class="form-label">Published: </label>
          <InputSelect id="published" @bind-Value="product.PublishedId" class="form-select">
          <option value=""></option>
          @foreach (var published in publishes)
            {
              <option value="@published.Id">@published.Name</option>
            }
          </InputSelect>

        </div>
        <div class="mb-3">
          <label for="price" class="form-label">Price: </label>
          <InputNumber id="price" @bind-Value="product.Price" class="form-control" />
        </div>
        <div class="mb-3">
          <label for="releaseAt" class="form-label">Release At: </label>
          <InputDate id="releaseAt" @bind-Value="product.ReleaseAt" class="form-control" />
        </div>
        <button type="submit"class="btn btn-primary">Save</button>
      </EditForm>
    </div>
  </div>
}
</div>
@code {
  // to get user inout all data of product
  [SupplyParameterFromForm]
  private ProductDetails product { get; set; } = new()
  {

    Name = string.Empty,
    ReleaseAt = DateOnly.FromDateTime(DateTime.UtcNow)
  };

  private PublishesClient publishesClient = new();

  private ProductsClient productsClient = new();

  public Published[]? publishes;

  protected override void OnInitialized()
  {
    publishes = publishesClient.GetPublishes();
  }

  private void HandleSubmit()
  {
    productsClient.AddProduct(product);
  }

}
